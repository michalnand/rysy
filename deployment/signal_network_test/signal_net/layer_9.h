#ifndef _LAYER_layer_9_H_
#define _LAYER_layer_9_H_


#include <NetworkConfig.h>


#define layer_9_type "convolution"

const sLayerGeometry layer_9_input_geometry = {16, 1, 16};
const sLayerGeometry layer_9_output_geometry = {16, 1, 32};
const sLayerGeometry layer_9_kernel_geometry = {3, 1, 32};

#define layer_9_weights_size ((unsigned int)1536) //array size
#define layer_9_weights_range ((nn_t)474) //multiply neuron result with range/1024

const nn_weight_t layer_9_weights[]={
-7, 0, 0, 5, 0, 5, 2, 0, 4, 0, 2, 0, 4, 3, -4, 0, 
0, 0, 0, 3, -8, 2, 0, -5, 0, 0, 2, 0, 0, 1, 0, -1, 
0, 0, 0, 4, -7, 0, 0, 0, -8, -5, -3, 0, 0, -4, 0, 2, 
0, 0, -6, 4, 0, -2, 0, 0, -3, 0, 0, 2, -7, 0, 0, 1, 
0, 0, -7, 1, 0, 0, 0, 0, 0, 0, -2, 3, -3, 1, 0, 0, 
0, 0, -2, 0, 0, -6, 0, -4, -3, 0, -6, -2, 0, -1, 4, 0, 
1, 1, -20, -27, 26, 17, -36, -9, -7, -1, 0, 0, 1, 2, 9, 0, 
0, -6, 0, -32, -53, 0, 0, 0, 15, -22, 9, -4, -7, -6, -36, -5, 
20, -5, 15, -11, 1, 12, 3, 16, 10, 0, 10, -33, -73, 16, -11, 14, 
-8, -10, -9, -21, 9, -27, -21, -29, -8, 3, 0, 0, 10, -34, 1, -4, 
-2, 0, 24, 0, -34, 0, 2, -2, -22, 14, 28, -16, -13, -9, -5, -1, 
-7, 18, 24, -14, -1, -5, 0, 12, -7, -1, 51, 28, -38, -36, -4, 36, 
7, 0, 0, -41, -43, -5, 15, -14, -7, 0, -3, 3, 27, -3, 9, 8, 
0, -1, -11, 7, -40, 0, 0, 0, -27, 8, 22, -45, -7, 31, 13, -2, 
-13, 41, 0, -6, 6, 0, 10, -7, 0, -2, -27, 10, -34, -11, -2, 16, 
0, -2, -1, -5, 0, 0, -4, -4, 5, -5, -5, 0, 0, 0, 0, -5, 
-6, 4, 6, -4, -4, 9, -9, 0, -5, -1, 5, 0, 5, -5, 2, 6, 
9, -7, -6, 1, -1, -4, 8, -6, -9, 1, 0, -7, -7, -8, -8, -8, 
3, -23, -3, -21, -33, -37, 14, 9, -28, -1, -5, -1, 2, 30, 55, -6, 
2, 10, -21, -33, -15, 2, -6, -3, -55, -20, -24, -45, -31, 9, -23, -3, 
-17, 11, 10, 8, -5, 0, 5, 6, -4, 1, 2, -7, -34, 37, -4, 2, 
6, -5, 1, 4, 8, -11, -6, 4, -7, 5, 9, -1, -7, -5, 0, -9, 
-6, 4, -3, -2, -9, 3, -7, -1, 3, -7, -2, -3, 5, -8, 4, -6, 
3, -4, 3, 1, -1, -12, -2, -4, 2, -9, -11, -1, -10, -8, 4, -7, 
-1, -8, 0, 4, 9, 3, 2, -3, 9, -6, -7, -4, 0, -13, -6, 2, 
9, 8, -6, -2, -13, -6, 3, 7, -7, 1, -5, 3, 0, 0, 1, 0, 
2, -5, -9, 7, -4, -10, -11, 4, -13, -13, 1, 0, -3, -4, 4, 0, 
-12, 0, 2, 5, 2, -5, -5, 4, -9, 1, 6, 2, 5, 1, 4, -2, 
-9, 9, 2, -8, -8, 3, -2, -2, 7, 7, -1, -3, 8, 6, 2, -6, 
6, 9, -2, -2, -6, 4, 1, -5, -11, -11, 3, 4, -7, -6, -3, -5, 
-11, -18, 0, -57, 49, -6, -12, 2, -34, -8, -8, -6, 7, 36, -21, 3, 
-2, -2, 20, -7, 16, -4, 4, 0, -11, -17, -26, -54, -41, -33, 1, -13, 
-25, -15, 31, 21, -7, 16, 8, -30, -11, 0, 22, 7, 7, 25, 10, -2, 
7, 1, -25, -4, 8, 21, 8, -25, -31, -7, -6, 2, 16, 8, 24, 0, 
10, 8, -1, -21, -20, -8, -8, 2, -27, 26, -8, -21, 0, -36, 0, -28, 
-44, 24, 29, -5, 25, 7, -6, 15, -3, -25, -28, -20, 0, 5, -20, 20, 
-9, -4, -7, 0, 3, -1, 2, 3, 5, -7, -9, -5, -11, -11, -10, 9, 
0, 3, 1, 8, 4, -6, 0, 0, 0, -3, 3, -9, 2, 0, -2, 8, 
9, -8, 7, 4, -2, -5, -7, -1, -1, -3, 9, 11, -3, 2, -1, -3, 
0, 1, -5, 0, 8, -5, -2, 0, 1, 0, -2, -7, -6, 4, -2, 4, 
7, -7, -8, -10, 4, 7, 4, -1, -6, 7, 4, 5, -8, -5, 2, -1, 
0, 2, 2, 9, 5, -6, -6, -4, -4, -3, 3, -4, -3, -1, 4, -8, 
-11, -8, 22, 12, -11, 9, 11, 39, -27, -3, -9, 0, -52, -26, -26, 7, 
9, -1, 0, 12, 12, 12, 11, -5, -10, 25, -44, 0, 13, -53, 8, 20, 
-14, 18, -11, -35, -7, -8, 18, -10, 18, 33, -24, -28, -15, -11, -61, -59, 
-12, -2, 1, 0, 0, -1, 3, 1, -2, -8, 5, -7, -1, -11, -8, 7, 
0, -4, 1, -7, 1, 0, 3, -2, -2, -6, 5, -6, 8, 0, -8, 3, 
-3, -4, 1, -7, 6, 1, -2, -6, -4, -2, -10, -6, -3, 5, -10, -11, 
-16, -14, 12, -29, -36, 5, -67, -4, -27, 9, 6, -2, 6, 13, 55, 7, 
4, 7, 13, 6, 15, -10, 11, -3, 85, -73, -53, 47, -36, -59, -43, -11, 
-5, -26, -10, 43, -22, 5, -18, -29, 10, -19, 35, 3, -15, -30, 40, 12, 
9, 8, -3, -5, 0, 1, -3, -7, -3, 3, 4, -3, -6, -2, -2, 6, 
-6, -4, -3, -3, -1, 2, -2, 2, 4, -9, -2, 3, -2, -5, 4, 1, 
-6, 6, -8, 3, 3, -8, -2, -7, -9, 4, -5, 3, -5, 5, 5, -10, 
-7, 6, 2, -7, 0, -1, 7, 5, -8, 0, -7, 4, -9, 0, 1, -8, 
-1, 8, -4, -7, 1, 1, -9, 7, 2, -9, -2, 0, 8, -7, -2, 0, 
1, 0, 1, 7, -3, 2, -6, 0, 0, -7, 2, 3, -1, -2, 0, -4, 
2, -9, -4, 3, 4, -5, 5, -4, 11, 1, -5, 8, -7, -2, 8, -1, 
-6, -4, 9, -4, -3, 0, 3, 6, -3, -8, 13, -5, -1, 1, 0, -4, 
9, 2, 1, -7, -10, 0, 0, -7, 0, -1, 1, 0, 0, 1, 0, -2, 
2, -6, -20, -13, -68, 2, -6, 3, 16, 4, 0, 8, -5, -33, -32, -3, 
6, 12, 44, 30, 2, -3, 6, 8, 4, -19, 16, -10, -6, 5, 6, 11, 
-1, -2, -32, -18, 13, 8, -15, 16, 22, -3, 7, 31, -24, -32, -96, -52, 
-7, -5, -7, 6, 6, -1, -5, 0, 4, 0, -9, -2, 4, -3, 9, 4, 
5, 6, -7, -1, -7, 2, -7, 2, -3, 0, 7, 1, -8, -3, 3, 0, 
-5, 8, -8, 0, -5, -8, -4, 0, 0, -6, -4, 8, -6, -4, 4, 9, 
-23, -14, -33, 38, -52, -39, -15, -3, -7, -8, 3, -5, -7, -15, -11, -5, 
-8, -10, 29, 15, 12, -1, -12, 0, 61, 7, -65, 1, -27, 6, -4, 5, 
9, -20, -31, 19, -12, -22, 0, 19, -9, 20, 44, 34, 43, -28, -3, -9, 
-10, -3, -11, -22, -1, 39, -10, -27, -8, 9, 1, -9, 15, -13, 16, -1, 
2, -2, 38, 7, -3, -5, 7, -13, 19, 3, -17, 12, 22, -28, -17, -15, 
1, 16, -10, 27, -16, -15, -8, -1, -3, 0, 24, 7, 38, -7, 21, 6, 
3, -3, 0, -52, 7, 9, 0, 14, 26, 2, 0, 3, 12, -1, -45, 2, 
7, -5, 4, -11, 4, 2, 1, -4, 17, 12, -2, 31, 21, -18, 10, 0, 
24, -12, -4, -6, 10, -11, -14, 5, -9, 2, 25, -11, 3, 11, -14, -5, 
18, -8, -14, -8, -19, 18, -9, 2, 17, 3, 9, -9, 26, 0, 18, 9, 
6, 12, -18, -6, -19, 2, 0, 1, -8, 6, -18, -24, 1, -15, -12, -12, 
23, 6, 9, -19, 5, 12, -12, 0, -13, -7, 11, -12, 14, 12, -19, 23, 
-12, 7, -9, -61, -3, -11, -24, 2, -20, 7, -2, 6, -11, 32, 17, -6, 
0, 11, 34, 3, 4, -6, -6, -1, -45, -24, -36, -37, -49, -36, -21, -3, 
-8, 1, -5, -35, -24, -10, 13, -7, -28, 7, 28, 7, -3, 35, 35, -40, 
31, 4, 18, -127, 49, 29, -29, -50, -57, 3, 2, 4, -1, -10, -41, -9, 
-5, 4, -13, -30, -10, -5, 0, 0, -71, 9, -48, -47, -3, -83, -19, -62, 
-45, -55, 18, -16, 30, -4, -5, 30, -17, 6, -40, -53, -17, -12, -9, 3, 
3, 3, -9, -6, 0, -3, -2, -1, 0, -7, 0, -9, -7, -7, -4, -4, 
-8, -2, 5, -4, -5, -5, 6, 5, 2, 3, -3, 4, -4, 8, -8, 8, 
-9, 0, 6, 6, -11, -8, 0, -7, 0, -3, 2, -1, -1, -10, -3, -5, 
4, -3, 0, 5, -5, -9, 9, 1, -6, 4, 0, -9, 0, 2, -2, 7, 
0, 4, -4, -10, 2, 8, -9, 0, 8, -3, -8, 5, -8, 7, -1, -6, 
-9, 3, -5, 1, -7, -4, -10, -2, 4, 3, -3, -10, -2, -8, -4, -8, 
2, 3, -4, 48, -19, 59, -38, -11, 4, -7, -12, -3, 21, -9, 14, 10, 
2, 4, -12, -13, -34, -1, -1, -11, 5, -2, 10, 2, 32, 25, -33, -5, 
-8, 6, 11, 16, -6, 8, 4, -11, -1, 1, 10, -13, -11, 17, -8, 20, 
0, 5, 1, 4, 4, 0, 5, -7, 8, -6, -2, 6, -9, 0, -2, 1, 
5, 7, -2, -4, 0, 7, 6, -8, -3, 3, -2, -1, -6, -5, 4, -2, 
2, -7, 8, 1, -6, -6, -1, 4, 0, -1, -6, -4, 6, 4, -7, -8, 
};




#define layer_9_bias_size ((unsigned int)32) //array size
#define layer_9_bias_range ((nn_t)212) //multiply neuron result with range/1024

const nn_weight_t layer_9_bias[]={
0, 0, -65, -27, 49, 0, -49, 0, 0, 0, -73, -41, 0, 0, 16, 0, 
58, 0, 0, 0, 103, 0, -12, -45, 1, 15, -127, -30, 0, -1, 38, 0, 
};


#endif
