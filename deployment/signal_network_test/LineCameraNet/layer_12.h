#ifndef _LAYER_layer_12_H_
#define _LAYER_layer_12_H_


#include <NetworkConfig.h>


#define layer_12_type "output"

const sLayerGeometry layer_12_input_geometry = {8, 1, 8};
const sLayerGeometry layer_12_output_geometry = {1, 1, 10};
const sLayerGeometry layer_12_kernel_geometry = {8, 1, 8};

#define layer_12_weights_size ((unsigned int)512) //array size
#define layer_12_weights_range ((nn_t)666) //multiply neuron result with range/1024

const nn_weight_t layer_12_weights[]={
93, 13, 0, 1, 0, 1, 0, -1, -13, -13, -14, -12, -13, -12, -15, -17, 
127, -13, -8, -9, -8, -8, -6, 2, -9, -13, -14, -12, -14, -13, -13, -15, 
-6, -2, 10, 9, -6, 0, -10, 0, -6, -11, -13, -12, -13, -12, -13, -14, 
-19, -14, -13, -14, -14, -14, -15, 19, 68, -13, -9, -10, -11, -10, -12, -12, 
-35, 28, -1, -4, -2, -2, -3, -2, 36, 20, -8, -5, -4, -4, -5, -5, 
-20, 34, -11, -2, -3, -3, -1, 1, 33, 21, -9, -3, -4, -3, -4, -4, 
-10, 1, 4, 6, -3, -7, 0, 5, 32, 17, -8, -3, -4, -4, -4, -4, 
62, -19, 0, -5, -4, -4, -6, 0, -51, 46, -20, -2, -4, -3, -3, -3, 
-7, -24, 29, -1, -2, -1, 0, -2, -7, 21, 22, -8, -4, -4, -4, -6, 
-17, -9, 39, -11, -1, -2, -1, 2, -10, 17, 25, -9, -2, -4, -4, -5, 
-13, 0, 1, 0, -5, 8, -4, 2, -10, 21, 20, -8, -3, -4, -3, -5, 
-19, 67, -23, 1, -5, -4, -3, 4, 17, -17, 55, -21, -1, -4, -4, -4, 
-14, 1, -21, 29, -2, -3, -1, -3, -3, -9, 22, 21, -8, -4, -4, -6, 
-19, -1, -11, 40, -12, -2, -2, 2, -1, -7, 17, 23, -9, -3, -4, -5, 
1, -2, 0, 7, -1, 0, 5, -1, -2, -8, 20, 21, -9, -3, -4, -4, 
-2, -19, 66, -24, 2, -5, -4, 0, -4, 0, -19, 57, -20, -1, -3, -2, 
-12, -6, 3, -23, 31, -1, -3, -2, -3, -5, -8, 21, 21, -9, -5, -7, 
-20, -2, 0, -11, 39, -11, -1, 1, -3, -4, -8, 18, 25, -10, -3, -6, 
0, 10, 4, 0, -2, -7, -7, -6, -4, -4, -8, 20, 21, -10, -3, -5, 
-5, -2, -21, 66, -24, 1, -6, 0, -1, -4, 1, -19, 58, -19, -1, -2, 
-12, -4, -4, 5, -23, 28, -2, -4, -2, -4, -4, -7, 22, 22, -8, -4, 
-18, -3, -3, 0, -10, 37, -12, 4, -2, -4, -3, -9, 18, 24, -10, -3, 
-7, -4, 2, 0, 0, 3, 5, -11, -3, -4, -3, -7, 20, 23, -9, -3, 
-4, -4, -2, -18, 65, -23, 0, 0, -3, -4, -5, 0, -20, 58, -21, -1, 
-11, -5, -3, -4, 3, -22, 28, 3, -2, -4, -5, -3, -7, 19, 24, -18, 
-17, -3, -2, -2, 0, -11, 35, -15, -2, -3, -3, -3, -7, 18, 26, -20, 
-7, 5, 0, -3, 8, 0, 6, -12, -2, -4, -2, -4, -6, 20, 23, -17, 
-3, -3, -3, -2, -18, 65, -22, 19, 0, -4, -3, -4, 0, -20, 58, -19, 
-15, -5, -2, -2, -3, 3, -16, 14, -2, -4, -4, -4, -5, -6, 18, 64, 
-17, -3, -2, -3, -3, 0, -8, 4, -2, -5, -4, -4, -5, -8, 13, 58, 
-8, -11, 11, 10, -9, -7, 12, -7, -2, -4, -4, -4, -5, -7, 17, 55, 
-5, -5, -5, -4, -3, -18, 57, -29, -1, -5, -4, -2, -4, 0, -16, 42, 
};




#define layer_12_bias_size ((unsigned int)8) //array size
#define layer_12_bias_range ((nn_t)301) //multiply neuron result with range/1024

const nn_weight_t layer_12_bias[]={
127, 44, 43, 43, 46, 45, 41, 46, };


#endif
