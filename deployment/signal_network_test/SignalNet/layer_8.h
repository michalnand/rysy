#ifndef _LAYER_layer_8_H_
#define _LAYER_layer_8_H_


#include <NetworkConfig.h>


#define layer_8_type "output"

const sLayerGeometry layer_8_input_geometry = {8, 1, 8};
const sLayerGeometry layer_8_output_geometry = {1, 1, 10};
const sLayerGeometry layer_8_kernel_geometry = {8, 1, 8};

#define layer_8_weights_size ((unsigned int)512) //array size
#define layer_8_weights_range ((nn_t)687) //multiply neuron result with range/1024

const nn_weight_t layer_8_weights[]={
4, -15, -15, -14, -16, -16, -15, -15, -8, 0, 1, 3, 1, -7, -2, -8, 
-39, 4, 3, 5, 2, 5, 3, 17, -50, 5, 2, 3, 0, 2, 2, 10, 
127, -1, -8, -8, -8, -7, -8, -5, -11, -14, -16, -15, -17, -15, -15, -18, 
0, 11, -6, -1, -2, 12, -1, -5, -4, -14, -16, -16, -13, -16, -17, 13, 
31, 28, -9, -5, -4, -6, -4, -6, 5, -7, 0, -12, 5, 0, 1, -6, 
18, -27, 4, 0, 1, 0, 0, 2, 27, -30, 6, 0, -1, 0, -1, 2, 
-38, 35, -8, -3, -2, -4, -3, -1, 43, 22, -8, -5, -5, -5, -4, -6, 
4, -7, 11, 3, 7, 9, 0, 8, 61, -15, -2, -5, -5, -5, -6, -2, 
-8, 17, 28, -9, -5, -4, -4, -4, 0, -15, -5, -2, -4, 1, 1, -11, 
0, 29, -29, 3, 0, 0, 0, 1, -2, 35, -33, 6, -1, -1, -1, 0, 
-10, -15, 41, -8, -2, -2, -2, -1, -10, 23, 24, -7, -5, -3, -4, -7, 
6, -13, -2, 0, 13, -3, -4, -4, -20, 61, -14, -3, -4, -4, -5, -1, 
-4, -7, 18, 28, -7, -5, -4, -5, 0, -13, -4, 0, 0, -8, -11, 0, 
3, -3, 28, -28, 3, 0, 0, 2, 4, -7, 33, -34, 5, 0, -1, 0, 
-16, -2, -14, 41, -7, -3, -3, -3, -4, -7, 21, 23, -7, -5, -3, -5, 
10, 1, 6, 0, 3, -6, -2, 6, -6, -16, 62, -14, -1, -5, -5, 2, 
-5, -5, -6, 18, 26, -9, -4, -4, 11, -9, 8, -9, 1, 6, -9, -4, 
4, 0, -4, 27, -28, 4, 0, 2, 4, 0, -9, 34, -31, 6, -1, 2, 
-17, -3, -1, -14, 40, -7, -4, -1, -4, -5, -7, 22, 24, -7, -4, -6, 
3, 12, 11, 13, -8, -1, 6, 13, -7, -3, -15, 63, -15, -2, -5, 0, 
-3, -6, -4, -6, 19, 28, -10, -4, 9, 2, -6, 12, -4, 1, 12, -9, 
5, 0, 0, -4, 29, -29, 4, 4, 5, 1, 1, -9, 35, -32, 7, 2, 
-15, -3, -2, 0, -15, 40, -7, 0, -4, -6, -5, -7, 24, 24, -6, -5, 
-2, 10, 5, 5, 5, 6, 5, 8, -8, -4, -4, -17, 61, -15, -3, -6, 
-3, -6, -4, -5, -6, 19, 30, -12, -3, 11, 2, 8, 3, -9, -2, -3, 
4, 0, 0, 0, -5, 29, -30, -3, 3, 0, -1, 0, -9, 35, -33, 0, 
-14, -4, -3, -3, 0, -14, 40, -10, -3, -5, -4, -4, -8, 21, 24, -13, 
1, -8, 2, -7, 1, -4, 1, 12, -7, -4, -4, -3, -16, 61, -13, 22, 
-4, -5, -4, -5, -5, -6, 13, 52, 0, -5, 0, 0, -12, -8, 8, 0, 
3, 0, 0, 1, 0, -5, 27, -18, 2, 0, 0, 0, 0, -7, 30, -20, 
-17, -3, -2, -3, -2, -1, -11, 24, -3, -6, -5, -5, -5, -6, 17, 59, 
-6, -5, 4, 13, -1, -3, -5, 7, -8, -4, -4, -3, -4, -15, 56, -17, 
};




#define layer_8_bias_size ((unsigned int)8) //array size
#define layer_8_bias_range ((nn_t)339) //multiply neuron result with range/1024

const nn_weight_t layer_8_bias[]={
127, 42, 32, 36, 33, 33, 41, 29, };


#endif
