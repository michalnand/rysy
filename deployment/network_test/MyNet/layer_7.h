#ifndef _LAYER_layer_7_H_
#define _LAYER_layer_7_H_


#include <NetworkConfig.h>


#define layer_7_type "dense convolution"

sLayerGeometry layer_7_input_geometry = {14, 14, 24};
sLayerGeometry layer_7_output_geometry = {14, 14, 32};
sLayerGeometry layer_7_kernel_geometry = {3, 3, 8};

#define layer_7_weights_size ((unsigned int)1728) //array size
#define layer_7_weights_range ((nn_t)964) //multiply neuron result with range/1024

const nn_weight_t layer_7_weights[]={
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
-55, -83, -24, -7, 10, 0, 9, 21, -29, -47, -16, 24, 9, 2, -23, -20, 
-29, -5, -11, -23, 21, 24, 19, 25, 8, 17, -35, -52, -19, 0, -6, 2, 
0, -18, -16, -1, -3, -9, 14, 11, 17, 17, 12, 14, 7, -2, -3, -13, 
-24, -39, -13, -23, -15, 12, 1, -7, 11, 27, 30, -22, -11, 5, -13, -32, 
-28, 19, -6, 3, -2, -1, 17, -16, -3, 0, 2, 9, 11, 28, 33, 35, 
6, 1, 3, -16, -10, -23, 19, 6, 17, -18, -18, 7, 8, 7, 8, -35, 
-19, 1, 3, 0, -28, 13, 12, 4, 0, 0, 2, 12, 26, 19, 8, -7, 
-31, 0, -9, -8, -7, -9, -2, -3, 15, -3, 1, -8, 6, -8, 1, 1, 
15, 9, 3, -1, 0, 10, 1, -13, -4, 3, 1, 0, -1, 1, 2, 0, 
17, 8, -4, 1, 0, 0, 9, 14, -10, -3, 3, 2, -3, 4, -9, 0, 
-7, 12, 12, 7, 5, 9, 12, 0, -2, 0, 20, 22, 6, 8, 12, 3, 
-13, -4, 6, -28, -6, 17, -22, -37, -39, 12, 12, 0, -16, -5, 0, 0, 
16, 17, -7, 5, -8, -42, 3, 9, -41, -35, -5, -27, -127, -3, 6, -37, 
-30, 5, -14, -13, -20, -13, -17, -7, -31, -13, -31, -9, 9, 18, 21, 6, 
-8, 26, 22, -3, -4, 9, -15, -27, -12, -15, -50, -17, 17, -25, -41, -10, 
-13, -36, -20, -16, -15, -7, 8, -25, 4, -9, -1, 31, -21, -4, 43, -18, 
-8, 7, 4, 5, 11, 8, -5, -7, -18, -6, -14, -20, 8, 7, -15, 11, 
42, 21, 3, 4, -5, -20, -16, -16, -10, -15, -10, -1, -1, -7, -43, 11, 
8, -5, 10, 30, 35, -6, -37, 23, -1, -40, -15, 0, -5, 5, -10, -7, 
2, -7, -3, -1, -2, 13, 5, -19, -9, -11, -31, 12, 6, 7, 8, -2, 
20, -1, 4, 18, 8, 16, 38, 34, 48, 4, 13, 14, 10, 17, 5, 14, 
29, 22, 12, 2, 4, 5, 9, 10, -6, 22, 0, 10, 7, 0, -7, 10, 
7, -11, 4, 2, 16, 7, 8, 3, -6, 3, 2, 0, 2, 5, 0, -2, 
-5, -5, -4, 2, 9, 1, 9, -4, -11, -19, -13, 4, 32, 0, 0, 14, 
12, 0, -4, 21, 17, 27, 15, 16, 22, -6, -31, -3, -26, -16, 0, 21, 
45, -2, 1, 12, 11, 6, 0, -1, -10, -28, 14, -17, -35, -10, -47, -32, 
-14, -21, 20, 4, -62, -11, -4, -97, 1, -17, -52, -52, 19, -3, 25, 2, 
0, 6, 18, 19, 1, -1, 9, 21, 1, 6, 15, -5, 8, 32, 4, 26, 
18, 15, 8, -49, 19, -44, -26, -8, 0, 17, -8, -9, 0, 16, 13, -19, 
20, 38, 3, 18, 13, -19, 21, -7, -40, 5, -5, 5, 1, 6, 10, 0, 
8, -5, 7, 12, 13, 0, -13, -14, -13, -15, 44, -3, 0, -5, -20, -3, 
3, 9, 6, -9, 1, -7, 0, 19, 5, -33, 13, 0, -30, -2, -28, -8, 
-17, -12, 16, -21, -21, -7, -17, 3, 4, -1, -5, -6, 21, 16, -20, 6, 
7, 9, 10, -5, -10, -30, -6, 37, 27, 3, 3, 7, -24, -3, -11, -14, 
-3, -6, 5, 11, 8, 13, 12, 5, -13, -2, 7, -3, 16, -1, 0, 2, 
-1, 1, -4, 16, 5, -11, 7, -4, 0, 13, 12, 6, 12, -4, 22, -3, 
7, 7, -9, -1, -12, 2, 5, 14, 0, 8, -1, 5, -3, -10, 0, -2, 
13, -7, -12, 6, -14, -27, 7, 19, -5, -5, 2, -22, -8, 0, -11, 10, 
13, 10, 12, -21, 3, 18, -22, -24, -35, 25, 6, -4, -1, -4, 4, -17, 
6, 19, -10, -8, 11, -17, -17, -1, 17, -20, -21, -2, -3, -31, -6, 0, 
-4, -14, -11, -2, 3, -11, -5, -8, -19, -6, -38, -26, 4, 13, 16, 25, 
-2, 15, -6, -15, -8, -19, 2, 2, 11, -17, -16, -11, -9, 0, -10, -10, 
-12, 3, -21, -7, -5, -38, -18, -1, 1, -5, -15, -15, -24, -20, 8, 6, 
3, 0, -10, -24, 5, 0, 1, -6, -13, -13, 11, 16, 0, -20, -7, -7, 
20, 6, 2, -7, -16, 6, -3, -5, 0, 13, 1, 3, -13, -12, -2, -7, 
-16, 25, -9, 1, 39, -37, -25, -45, 18, 2, -12, -5, -4, -2, -11, -48, 
-46, -22, -53, -37, -15, -7, 28, 3, 7, 7, 6, 4, -2, 0, 8, -1, 
-16, 22, 8, 8, 18, 17, -2, -2, 2, 0, -4, -6, 7, -7, 0, 27, 
9, 22, 13, 8, 14, 11, 4, 1, 3, 3, -3, 18, 2, 8, 4, -2, 
-3, 9, -2, -7, 11, -1, -5, 11, 5, 5, 3, 0, 1, 8, 10, 6, 
0, 0, -2, -7, 0, 7, 11, 14, 22, 0, 3, -8, -11, 3, 12, 12, 
9, 20, 2, 10, 7, -5, 0, 7, -22, -10, -10, -17, 0, 4, 21, 29, 
40, 13, 8, -3, 16, 7, -8, 2, -6, -27, -38, -18, -20, -40, -3, 11, 
-5, 8, -8, -10, 11, 17, -17, -2, 8, -24, -24, -20, 2, 12, -8, 28, 
11, -9, 29, 12, 0, 14, 16, 9, 31, 9, -20, -17, -4, -14, -4, 11, 
-16, -5, -18, -4, -33, -14, 6, -6, 10, 17, -3, 0, -44, 1, -37, -68, 
-7, 9, -16, -3, -5, -13, -3, -27, -19, 1, 10, 20, -14, 5, 8, -11, 
0, -12, -2, -10, -13, -5, 2, 15, -20, 11, 36, 9, 2, -18, 16, 9, 
-4, -2, 5, -14, 18, 0, 4, 4, -1, -7, -10, -21, -25, -3, 22, 30, 
-8, 10, 13, -32, -17, 3, 1, 5, -12, -14, 0, -29, 6, -68, -40, -7, 
13, -3, -13, 10, 0, -3, 18, 10, 22, 5, 19, -13, -10, 10, -12, -5, 
35, 17, 0, -3, 12, -52, -20, 11, -42, -11, 3, 5, 6, 0, -9, 6, 
4, 2, 7, 6, 2, -8, 2, 3, -4, 17, 15, 1, 3, 14, 9, -4, 
-4, 0, -3, 7, 1, 3, 5, 7, 12, -6, -5, 5, -3, 2, -9, -3, 
21, -13, -11, 1, -15, -7, 6, -1, -5, 8, -13, 9, 14, -1, 10, 9, 
-14, -6, -6, 3, -7, -13, 11, 11, 26, 14, -5, -4, 27, -11, -16, 22, 
-4, -20, 1, -1, -8, -28, -7, -5, -17, -6, -9, 21, 15, 4, 12, 6, 
7, -3, -6, 1, 28, 27, -5, 55, 4, -23, 49, 11, -4, 16, -7, -31, 
26, -31, -17, -14, -6, 5, -5, 4, 8, 4, 5, 14, -17, -4, 15, 19, 
3, 22, -5, 10, 15, 1, -16, -13, 2, 6, 0, -2, 3, -4, -3, -9, 
-12, -11, 15, 12, -11, 5, 8, -5, 1, -4, 3, -11, 10, -14, -8, -4, 
-23, 0, 13, 26, 9, -10, 10, -12, -21, 0, -8, -31, 25, 3, -10, 4, 
-1, 2, -19, -11, -13, 15, 1, 5, 11, 6, 12, 18, -2, 1, 13, -1, 
20, -5, 5, 14, -32, -8, -11, -4, 2, -10, -3, 0, -4, 1, -1, 8, 
0, -6, 0, -18, 0, 16, -21, -42, 3, 8, 2, 14, -9, 8, 18, -26, 
-7, 2, 0, 8, -4, 2, -3, 2, -4, -20, 11, -5, 0, 2, -7, -2, 
-7, 5, -1, -3, 11, 6, 2, 8, 10, 0, 3, -5, 0, 1, 3, 1, 
14, -7, 4, 3, -1, 1, -1, -2, 0, 0, -2, 6, 7, 0, 3, 0, 
0, -7, -3, -13, -8, -16, -12, 2, 31, 21, 10, -6, 19, 13, -21, -17, 
-29, 9, -1, 10, -11, -7, -3, -36, -17, -10, 10, 6, 15, 5, 0, 0, 
-38, -11, -6, 1, -18, -17, 12, 1, 11, 18, 11, 36, 13, -2, 14, -8, 
-9, -17, -35, -55, -13, 12, 12, 14, 6, 25, 43, -41, -3, -38, -7, 0, 
8, -3, 7, 6, 7, -5, -21, -1, -23, -21, 1, 21, 23, -26, -10, -35, 
10, 10, 1, -7, -19, -17, 1, -8, -6, 2, -6, -17, 14, 1, 0, 8, 
0, 0, 11, 11, 16, -21, -8, -2, 8, -19, -19, 5, -9, 0, -4, -10, 
-13, -18, -7, -9, -24, -15, -17, 8, -1, -9, 3, 0, 13, -16, -17, -4, 
16, 0, -2, 10, -6, 9, 10, 1, 9, -9, -13, 2, -12, -14, 0, 11, 
1, 7, 19, 19, 15, 6, 9, -3, -27, -22, 0, 25, 15, 11, 14, 16, 
14, -7, -17, -8, -10, -21, -2, 18, -3, 1, 7, 0, 5, 12, 4, -5, 
-9, 2, -6, 13, 7, -1, 14, 7, -6, -7, 3, 1, -2, -7, -3, 6, 
1, -1, 9, 6, 4, 3, 9, 5, -7, -7, 0, -15, -4, -4, 2, 1, 
1, 4, -7, 2, -24, -17, 0, 4, -3, -13, 15, 10, 0, 2, 5, 13, 
};




#define layer_7_bias_size ((unsigned int)8) //array size
#define layer_7_bias_range ((nn_t)80) //multiply neuron result with range/1024

const nn_weight_t layer_7_bias[]={
0, 8, 110, 45, 10, -26, -127, -64, };


#endif
