#ifndef _LAYER_layer_7_H_
#define _LAYER_layer_7_H_


#include <NetworkConfig.h>


#define layer_7_type "dense convolution"

sLayerGeometry layer_7_input_geometry = {14, 14, 24};
sLayerGeometry layer_7_output_geometry = {14, 14, 32};
sLayerGeometry layer_7_kernel_geometry = {3, 3, 8};

#define layer_7_weights_size ((unsigned int)1728) //array size
#define layer_7_weights_range ((nn_t)587) //multiply neuron result with range/1024

const nn_weight_t layer_7_weights[]={
27, 2, 27, 37, 17, 47, 42, 38, 60, 32, 9, 0, 5, 0, -1, 0, 
3, -4, -6, -5, -37, -7, -16, -43, 2, 0, -1, 8, 35, 20, -9, 0, 
0, -23, 0, 11, 0, 0, 9, 0, 0, 0, -13, -4, -12, 0, 0, 19, 
-65, -11, 0, -26, -17, 0, 11, 0, -4, 6, 0, 0, 0, 9, -38, 0, 
-4, -8, 0, 0, -24, 0, 0, -33, 4, 0, 5, 0, 0, 0, 0, 0, 
4, 0, 0, 0, 0, 0, -20, 0, 0, -14, 5, 0, 0, 10, 0, -10, 
0, 1, 26, 0, -1, 0, -11, -1, 0, 27, 7, 20, -9, 8, 28, -38, 
0, 4, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, 0, -2, 0, 9, 
34, -6, 0, 0, 0, 0, 0, 23, 0, 3, 0, 0, -1, 1, 0, 11, 
0, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, 0, 0, 0, -34, 0, 
0, -6, -8, -1, 0, -18, -13, 0, 0, 0, 0, -2, 0, 0, 0, 0, 
-7, 0, 0, 0, 0, 0, 0, 0, 0, -8, 0, 0, -7, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, -12, 0, 2, 0, 2, 0, -5, 4, 
0, 0, 0, 0, 0, 6, 0, -14, 0, 0, 0, 29, 26, 13, 11, 0, 
3, 0, 8, 19, 0, 0, 0, 13, 0, -1, 0, 10, 9, 0, 7, 0, 
0, -15, -10, 3, 0, 0, 0, 0, 0, 0, 0, -2, 2, 0, 3, 0, 
-3, 2, 1, -25, -47, 31, 12, 9, 5, 6, -40, 3, -64, -115, 35, 52, 
60, 31, 29, 39, 47, 32, 1, 58, 49, 61, 50, 26, 22, 5, 0, -25, 
-6, 14, -5, 1, -12, -36, -3, -15, 0, 23, 8, -7, 3, 0, -2, -1, 
-5, -16, -8, 13, -15, 10, 14, -5, 29, 18, 25, 1, -20, -30, 0, -11, 
-24, 9, -18, 12, -5, 7, -4, -13, -4, -23, -44, 4, 7, -18, -22, -4, 
15, -3, 4, 11, 4, -16, 20, 21, 9, 17, 13, -12, -9, 7, -29, 3, 
29, 13, -12, -10, -41, 4, 1, 0, -1, 0, 4, -8, 2, -7, -37, -36, 
-45, 5, 10, 3, -11, -10, -9, -5, -7, -1, -1, 4, -18, 0, 13, 14, 
8, 7, 11, 5, -4, 0, 9, 1, -2, 1, 2, -11, 3, 6, 0, -10, 
-6, 2, 2, -11, 0, 4, 3, 3, 8, 8, -4, 0, -1, -19, 15, 10, 
20, 16, -1, 12, 6, 8, 5, -17, -14, -18, 8, 9, -6, 12, -3, -25, 
-1, 13, 21, -27, -11, -15, -9, 5, -7, -4, -18, -32, 7, 25, 14, -13, 
-12, -31, -14, 1, -76, 12, 48, 68, 33, 31, 41, 47, -13, 17, 8, -19, 
-9, -41, -28, -28, 30, 11, -10, 25, 14, 0, 22, 17, -2, 41, 15, 1, 
54, 25, -3, -4, -22, -23, 17, 7, -42, 5, 22, 7, 4, 30, 44, 9, 
11, -28, 25, 13, 28, 66, 59, 55, 1, 9, 7, -6, -22, -13, -11, -22, 
-38, -4, -9, -13, 6, -5, 11, 18, 9, 21, 0, 12, 21, 0, -3, 7, 
-22, -12, 12, -40, -48, -36, 0, -33, -27, -34, -32, -21, 7, -2, -14, -13, 
-6, -22, -2, -19, -36, 26, 14, -6, -13, 0, -24, 0, 0, -4, 1, 0, 
-11, -28, -27, -18, 6, -2, -18, -21, -13, -26, -15, -13, -8, 10, -10, -61, 
-3, -2, 4, 1, -8, 24, 29, 27, 52, -5, 3, 12, -1, -6, -6, 2, 
-5, -13, 9, 2, 0, -15, -23, -30, 6, -7, -11, -3, 15, 2, 16, 0, 
8, 31, 24, 5, 10, 11, 3, 11, -5, -3, 0, -7, -6, -20, -23, -31, 
10, 0, -5, 19, 13, 15, 0, 37, 20, -7, -14, 5, 9, 6, 2, 9, 
-7, -28, 0, 3, -2, 12, 5, 17, -58, -106, -38, -99, -84, -22, -21, -8, 
-22, 0, 20, -20, -6, 24, -3, 3, -26, -66, 13, 17, -1, 9, 20, 16, 
9, 38, 46, 13, 3, 43, 49, 38, 44, 42, 48, 30, 12, 11, 5, -7, 
-3, -4, -13, 4, 10, 36, 36, -3, 40, 36, -10, 29, 24, -21, -1, -13, 
-4, -11, -9, 7, -1, 16, 14, 2, 5, 27, -4, -6, 34, -13, 14, 47, 
-11, 0, -16, 1, 18, -42, 27, 8, -46, -8, 6, -4, 7, -12, 6, 11, 
15, 21, -35, -35, 5, -18, -43, 13, -36, -26, 21, 1, -14, -2, -6, 0, 
-35, 16, -21, -62, 0, -6, -2, -25, -17, -4, -4, -13, -5, -22, -6, -9, 
-10, 5, -5, -5, -9, -9, 10, 1, -9, 2, -16, -33, 11, 6, -44, 1, 
13, -38, 1, 5, -47, 19, 11, -11, 2, -2, 7, 6, 3, -9, 35, 28, 
17, -6, 0, 1, 26, 6, -10, 20, 10, 17, 9, -8, 10, -4, 3, 2, 
5, -20, -25, 2, -9, -15, -6, -10, 3, 10, 10, 26, 0, -11, 0, -3, 
-2, -14, 17, -27, 1, -8, -17, -10, 5, 6, -3, 17, 16, 15, -25, -4, 
21, -22, -6, 5, -20, -19, -12, 10, -4, 18, 17, 14, -2, 5, 13, 7, 
-4, -9, 1, 8, 11, -20, 43, 19, 36, 12, 14, 22, 0, 32, 34, -34, 
-23, -40, -28, 5, -47, 12, 32, 53, -1, -4, -12, 20, -5, -3, -26, -27, 
-12, -12, -60, -33, 20, 13, -25, 22, 12, 0, 7, -16, -9, 47, 24, 15, 
-7, -23, -24, -63, -87, -71, 12, -18, -65, 7, 29, 30, 16, 17, 39, 12, 
8, -22, 35, 11, 30, 32, 12, 0, -10, 8, -8, -15, -16, -27, 6, -5, 
-3, 12, -5, -18, 11, 0, 5, 5, -19, -16, 7, 1, 18, -13, -35, -33, 
41, 17, 4, -23, -30, -10, -28, -18, -15, -15, -12, 6, 8, -27, -39, 0, 
1, -21, -19, -4, -17, -1, -16, -49, 5, -4, -16, 16, 0, -4, 8, 17, 
3, 0, -2, 15, 4, -10, -5, -15, -7, 4, -16, -8, -9, -20, -24, -48, 
-3, 2, 3, 1, -5, 31, 12, 26, 46, 9, 9, 14, 14, 2, 0, -17, 
-13, -2, 4, -5, -8, -19, -1, -14, 4, 2, 22, 19, 10, -2, 15, 1, 
9, 10, 0, -7, 10, 13, 10, 2, 5, 1, -11, -18, -8, -3, -9, -26, 
18, 10, 0, 5, 16, -12, -11, -10, -11, 24, 18, 20, 15, 2, 4, -1, 
-2, -27, 12, -10, -4, 44, 7, -5, 16, -51, -108, 15, -85, -84, -38, -56, 
-49, 3, 10, 28, 9, 15, 28, 13, 19, 28, 31, 24, 23, -5, 5, 14, 
-16, 6, 24, 18, 2, -34, 11, 13, 13, 12, 22, 21, -50, 7, 31, -11, 
17, 28, 13, 1, 11, -31, 19, 63, 5, 60, 38, 31, 55, 34, -7, -58, 
-9, -45, -34, -22, -45, -34, -19, 21, -12, 4, -15, -6, 0, -24, -3, 22, 
-20, 2, 11, 6, 22, 1, 9, 16, -3, -2, -9, -3, -13, -25, 1, -5, 
1, 24, 18, 12, -18, 23, -12, -9, -14, -32, -12, 15, 8, -17, 34, -3, 
-35, 30, -27, -19, -12, 12, 3, 18, 1, 2, 13, 15, 8, 12, 0, 15, 
-2, -10, 5, -16, -12, 1, -18, -6, -1, -21, 13, 10, 0, 2, -35, -20, 
13, 18, 11, 29, 2, 23, 34, 11, -4, 1, 1, 2, 4, -8, 12, 25, 
29, -21, 2, 1, 7, 11, 3, 10, 7, 7, 4, 6, 18, 9, 13, -10, 
12, 4, 1, -6, 6, 3, 8, 0, -5, 8, -3, 6, -10, 7, 18, 15, 
12, -1, 9, 6, -1, 4, -4, 6, 4, -1, 3, 9, 5, 2, 34, -9, 
8, 9, 10, 0, 11, -19, -11, 8, -7, 0, 4, -5, -12, -21, -11, 0, 
-27, -97, -127, -100, -84, 1, -49, -30, -12, 0, 22, 0, 2, 32, 18, 4, 
5, -36, 28, 18, 29, 29, 8, 26, 29, 27, 16, 7, -58, -46, -1, -21, 
-26, 65, 17, -8, -17, 11, 22, 28, 14, 10, 29, 12, 33, 4, 47, 54, 
31, 44, 0, 66, 19, -77, -3, 6, 10, -23, -9, 4, -16, 6, 12, 14, 
27, 12, 6, -2, 7, 10, 29, 4, 2, 10, -4, 13, -9, -25, 15, -41, 
-55, -2, -7, 1, -4, 0, 4, 19, 10, -21, -8, -23, -43, -51, -68, -21, 
-63, -22, -25, -22, -26, -42, 21, -16, -15, 14, -21, 9, -6, 0, 5, 9, 
1, 13, -7, -4, -29, -9, 14, 24, -11, 2, 4, -9, -1, -6, -27, -12, 
-9, 21, 15, -16, 20, -4, 1, 1, 0, -13, -3, -16, -47, 21, -33, -38, 
1, 0, 3, -7, 4, 3, 12, 25, 20, 4, 1, -4, 0, -6, 0, 4, 
1, -15, -27, 12, -1, 16, -10, -7, -1, -15, 6, -2, 16, 8, 20, 6, 
2, 8, 0, 3, 8, 18, -4, 20, -1, 4, 0, -16, -27, -6, -2, 8, 
5, 1, -2, 14, 4, 8, -16, 5, 29, -11, 13, -1, -9, -7, 22, 8, 
-8, 9, -14, 1, 12, -10, 28, 6, -35, -68, -86, 1, -46, -66, 15, -82, 
-72, 8, 27, 7, -16, 20, -9, 1, 14, 11, -9, -36, -48, 4, -2, -11, 
-2, 10, 6, -50, 36, 6, 2, -1, 21, 11, 37, 38, -47, -26, 7, -65, 
-11, 16, -29, 2, 19, 37, 12, 40, 38, 11, 21, -5, 23, 34, -4, -69, 
-98, -36, -59, -66, -62, -56, -41, 6, -47, -66, -65, -62, -37, -78, -42, 7, 
20, -3, 21, 22, 15, 29, 24, 21, 18, -21, 2, -5, -9, 2, 4, -14, 
7, 12, -14, -13, -40, 12, -10, -12, 21, -1, 13, -28, 18, 23, -28, 11, 
23, 32, 16, -6, 12, 25, 33, 9, 3, 19, 35, 8, 11, -31, -29, -9, 
-11, -2, -2, -20, 4, 5, -44, -13, -33, -1, 20, -1, 13, 43, 2, 22, 
14, 21, 7, 11, 6, 21, 39, 10, 6, 3, 4, -1, 4, -1, -5, -3, 
10, -2, -2, -1, 20, 4, 5, 14, 8, -1, 10, 6, 19, -25, 7, 15, 
5, 17, 4, -11, 4, 3, -8, 4, 0, -4, 14, 2, -7, -7, -1, 2, 
5, 2, 13, 0, 1, -9, 4, 10, -5, 10, 12, -1, 9, -6, -21, -23, 
-11, -20, -22, 10, -6, 2, 25, 16, 3, -2, 30, 2, -19, 14, -2, -7, 
};




#define layer_7_bias_size ((unsigned int)8) //array size
#define layer_7_bias_range ((nn_t)108) //multiply neuron result with range/1024

const nn_weight_t layer_7_bias[]={
-80, -127, -16, -29, 8, -119, -1, -48, };


#endif
