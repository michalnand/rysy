#ifndef _LAYER_layer_3_H_
#define _LAYER_layer_3_H_


#include <NetworkConfig.h>


#define layer_3_type "dense convolution"

sLayerGeometry layer_3_input_geometry = {14, 14, 8};
sLayerGeometry layer_3_output_geometry = {14, 14, 16};
sLayerGeometry layer_3_kernel_geometry = {3, 3, 8};

#define layer_3_weights_size ((unsigned int)576) //array size
#define layer_3_weights_range ((nn_t)518) //multiply neuron result with range/1024

const nn_weight_t layer_3_weights[]={
0, 0, 0, 0, 0, -4, 17, 0, 0, -13, 0, 9, 0, 15, 0, 0, 
0, 0, 31, -24, 8, -23, 3, 27, -33, 6, 0, 0, 0, 0, -5, 0, 
11, 0, 0, 18, -9, 0, 7, 0, 17, 0, 0, 0, 0, 0, 0, 0, 
-20, 0, 4, 0, 0, 3, 22, 0, -41, 0, -54, -1, -25, -32, -21, 0, 
0, -2, 3, 0, 0, 6, 0, 7, 0, 0, 0, 0, 0, 0, 37, 39, 
53, 0, 0, 24, 0, -3, 13, 0, 0, 0, 9, 4, 0, 0, -23, -4, 
-11, -2, 0, 0, 1, 0, 0, 0, 0, 13, 0, 0, 25, 0, 1, 0, 
-9, 12, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, -24, 0, 
11, -41, -18, 0, 0, 6, 39, 33, 0, 0, 3, 0, 40, 16, 0, 1, 
0, 0, 0, 0, 0, 13, 40, 26, 8, -8, -28, -17, 0, 7, 11, 8, 
30, 12, -2, 0, -9, 0, -53, -49, 0, 0, 0, 0, 0, 0, 0, 2, 
0, 11, 2, 27, 0, 0, -18, 0, 0, 0, 19, 21, 17, 0, 0, 0, 
0, -31, 0, 0, 0, 15, 23, 29, 28, 7, 4, 0, -18, -8, 21, 17, 
9, 0, -41, -34, -6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 57, 42, 
60, 0, 0, -55, 3, 0, -45, 0, 0, 0, 0, 11, 12, 16, 10, 0, 
19, 0, -2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, -25, 0, 
-1, -58, 26, -38, -23, 1, 32, -1, 22, 16, -19, 25, 14, -26, -9, -68, 
-34, -57, -1, -14, -36, 8, -10, 44, -1, -70, 39, -13, -80, 22, -24, -18, 
13, -5, -8, -2, -9, -10, 45, 57, 62, 7, 24, 5, 34, 2, -65, 20, 
-8, -12, -67, -11, 32, 0, 17, 19, 31, 16, 7, -25, 0, 18, -36, 5, 
3, 0, 4, 6, 15, 20, 29, 40, 16, -12, 18, -7, -69, -11, 29, 23, 
-24, 8, 16, -17, 0, -18, 45, -34, -28, -52, -21, 25, 6, 28, 19, 2, 
-34, -20, 15, -33, -73, 20, 5, -35, -10, 0, 2, -9, -8, -13, -30, 41, 
85, -15, 9, 25, -19, -28, -9, 8, 0, -7, -28, -27, -2, -10, -21, -2, 
-35, -23, 11, 2, 18, 26, 14, 13, 6, -23, -16, 5, -3, 8, 42, -16, 
-8, 14, -25, -5, 10, 35, 37, 60, 10, -3, 23, -2, 2, -4, 0, 48, 
56, -15, -20, -12, -12, 4, 19, 3, -2, 55, 29, 24, 39, 32, 34, 1, 
-2, 2, -1, -15, 7, -49, -55, -19, 17, 0, -63, -33, -56, -127, -6, -17, 
-10, -15, 48, 37, 1, 38, 13, -36, 41, -25, -25, 38, 16, 14, 19, -12, 
-35, 10, -46, -17, 3, -29, -14, -22, -66, -3, -6, 3, -11, 45, 20, 57, 
8, -27, 6, 0, -48, -6, 46, 61, 39, 29, -20, -23, 14, -42, -45, 5, 
25, 55, -4, -7, 54, -71, 10, 36, -8, 2, 9, 5, -1, 1, 20, -2, 
-27, -16, -9, 20, -19, 30, 30, -17, 0, 13, 14, -81, -7, 12, -53, 30, 
-39, -16, 25, -5, -11, 9, -40, -4, 29, -27, 16, 36, -8, 8, 10, -24, 
17, 20, 9, 24, 11, -6, -27, 7, -18, 1, 32, -20, 14, 36, -7, -28, 
-40, -18, -97, -48, -6, -41, -21, 9, -3, -13, 10, 4, -34, 32, 34, 39, 
};




#define layer_3_bias_size ((unsigned int)8) //array size
#define layer_3_bias_range ((nn_t)72) //multiply neuron result with range/1024

const nn_weight_t layer_3_bias[]={
106, -20, -14, 127, -123, -46, 43, -15, };


#endif
