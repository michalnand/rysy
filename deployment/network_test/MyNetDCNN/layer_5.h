#ifndef _LAYER_layer_5_H_
#define _LAYER_layer_5_H_


#include <NetworkConfig.h>


#define layer_5_type "dense convolution"

sLayerGeometry layer_5_input_geometry = {14, 14, 16};
sLayerGeometry layer_5_output_geometry = {14, 14, 24};
sLayerGeometry layer_5_kernel_geometry = {3, 3, 8};

#define layer_5_weights_size ((unsigned int)1152) //array size
#define layer_5_weights_range ((nn_t)557) //multiply neuron result with range/1024

const nn_weight_t layer_5_weights[]={
-18, -40, -46, -4, -16, -8, -19, -11, -3, -22, -32, -29, -46, -1, 0, 3, 
32, 3, -5, 3, -15, -22, 8, 11, -18, -2, 5, -38, -35, -50, -37, -6, 
7, 15, 20, -3, -16, -2, 8, -28, -5, 17, 42, 35, -6, -69, -43, -51, 
-6, -12, -27, 10, -21, 24, -37, -34, -14, 0, 3, -14, 17, 11, 35, 9, 
4, 0, -23, -2, -3, -50, -28, -29, 20, 18, 3, 0, 13, 3, -6, -20, 
-11, -7, 0, 0, 0, 15, 10, 1, -7, 2, 45, 9, -8, -21, -11, 16, 
-36, -15, 3, 36, -4, -11, -11, 2, 9, 10, 0, -1, 22, 4, 8, -31, 
4, 0, -27, 0, 0, 17, 17, -23, 20, 1, 8, -9, 15, 8, -4, 2, 
-4, -2, 7, 8, 19, 5, 7, 21, -24, -18, -2, 5, 13, 22, 32, 5, 
-51, -12, 43, -73, -33, 20, -35, 11, 34, 13, 2, -6, 3, -12, -24, 11, 
1, 13, 7, -5, -8, 25, -11, -52, 9, -26, -73, 16, 13, 50, 3, 30, 
44, 26, -1, -24, -4, 22, -24, 35, 21, -23, -2, -11, 39, 22, 22, 32, 
0, -7, 15, -32, -31, -2, 7, 1, 69, -10, -13, 12, -14, -38, -63, -8, 
1, 3, -19, 5, -18, -32, 0, 0, -1, 7, 16, -6, 26, 15, -36, -15, 
-24, 5, 0, 14, 3, -6, -28, -6, -31, 2, -28, 2, -1, -52, -7, -4, 
-10, -47, -54, -37, -9, 3, -34, -22, 7, 22, 24, -5, 7, 8, -1, -9, 
31, 33, -87, -53, -18, -2, 12, 9, -12, 13, -29, -18, 13, 13, 15, 2, 
13, 15, 1, 12, 19, -11, -38, 1, 8, 19, 3, -21, 24, 19, 14, 7, 
23, 26, 7, 2, -4, -68, 2, -17, 48, -67, -73, -31, -13, -9, 12, 9, 
-27, -31, -23, -24, 27, 0, 4, 11, 13, 32, 26, 25, 32, -74, -36, 4, 
21, 17, 14, 12, -55, -17, 58, -29, 29, 54, -17, -4, 37, -18, -60, -127, 
-24, -10, -14, 51, 48, 15, 23, 19, -99, 39, 21, 37, 16, -28, -59, 5, 
-32, -3, 0, 38, 77, 28, 38, 36, 2, -23, -41, -23, -28, 39, 32, 24, 
38, -13, -42, -5, -20, 0, 30, -17, -25, -21, 24, -19, -72, -24, -40, 7, 
3, 30, 48, 19, -13, -61, -53, -63, 19, -10, 8, 14, -6, -51, -45, -20, 
-29, 11, -18, 2, 41, -18, -16, 21, 7, -2, 15, -8, -6, -12, -8, 21, 
-30, -34, -26, 0, -3, -50, -43, 19, 53, 64, -16, -62, -2, -29, -27, 13, 
36, 6, -28, 45, -2, -54, -28, -31, 8, -56, -65, -36, -13, 10, 21, 21, 
25, 6, -45, -17, -33, -58, -37, -28, -26, -17, -4, -63, -95, -63, -40, 11, 
20, 35, 28, 27, -34, -44, -27, -50, -53, -3, -3, 20, 22, -55, -74, -36, 
-27, -15, -3, -9, -18, -9, -24, -2, -6, -26, 8, -3, -3, -7, -37, -28, 
-56, -99, -25, -42, -50, 6, 16, -13, 22, 9, 45, 16, 71, 49, 38, 20, 
7, -16, 0, 25, 17, 25, 25, 33, 12, 12, 18, 9, -10, -16, -48, -32, 
-31, -14, -12, 26, 4, -35, -9, -5, 10, -22, 0, -3, 0, -36, -49, -9, 
-43, -18, -50, -43, 5, -23, 12, 14, 17, 3, -1, -10, -4, -18, 5, -3, 
0, -26, 16, 15, 28, 17, 6, 4, -15, -14, 33, 35, 43, 24, 33, 12, 
-8, -42, -23, 12, 30, 40, 103, 66, -1, 4, -2, -24, 1, -4, -22, 23, 
-1, 16, 13, 18, -51, -5, -16, -36, -51, -46, -7, 5, 16, -7, -2, -14, 
-69, 5, -31, -39, 3, 8, 18, 6, 12, 25, 15, -26, -31, 15, -19, -20, 
31, 12, -3, -12, 41, 9, 38, 20, 38, 17, -18, -15, -17, 70, -1, 9, 
-5, -20, 8, 14, -5, -7, 3, 9, 11, 8, -18, -19, -12, -20, -17, 31, 
2, 0, -38, -40, 10, -10, -15, 17, 27, 16, 6, -15, -40, -12, -43, -12, 
-14, 8, 23, 1, -14, -33, 25, -30, -8, 5, 24, 17, 9, 30, -16, -5, 
-2, 26, -18, 47, 27, 20, 16, 6, -22, 17, -9, -20, 2, 13, 11, 1, 
-18, 4, -5, -20, -8, 2, 9, 11, 0, -10, 26, 27, -34, 18, 32, 9, 
52, 40, 32, 20, 46, 68, 22, 36, 41, -29, -7, 35, -60, -51, -25, 65, 
37, -10, -5, -56, -45, -12, -44, -54, 65, 40, 21, -3, 24, 64, -24, -8, 
-12, 22, 0, -43, 43, 44, 25, -20, -15, -9, 44, 29, 31, -8, -5, 7, 
-8, 4, -31, 13, 12, -5, -40, -8, -3, -78, -61, -64, -48, -95, -48, 39, 
35, 24, -47, -23, -65, 45, 17, -7, 1, 4, 3, -1, -7, 2, 13, 10, 
-6, -15, 0, 5, -3, -5, -10, 8, 6, 10, 19, 2, 4, 5, -4, -9, 
-18, 8, 4, 27, 21, 15, -11, 15, 19, -13, -6, 6, 30, 24, 28, 27, 
26, 10, 29, 18, 25, -7, -7, -8, -28, -35, -12, 27, 39, 13, -36, 1, 
3, -29, -42, -35, 33, 6, -13, -20, 21, 39, -20, -6, 1, -1, 3, -35, 
-62, -82, -43, -109, -53, -18, -27, -14, -35, 12, 33, 18, 16, 9, 33, -19, 
-18, -4, -25, -16, 3, 0, 14, -10, 7, 22, -16, -3, 20, 17, 9, 27, 
28, 2, 16, -37, -28, -8, 8, -4, -6, -25, -38, -15, -23, 34, 37, 14, 
32, 33, 6, 41, 14, -58, 29, 20, 20, 13, 11, 31, 38, 36, 0, 1, 
-10, -18, 10, -7, -18, -35, -34, -13, -22, -2, -1, -13, 7, 8, -32, 8, 
-51, 13, 12, 5, 6, -4, -33, -1, -9, -59, -15, -9, 17, -10, 6, -4, 
-5, 3, 1, -43, 10, 13, -12, 6, -21, -1, 39, -2, -12, -6, -24, 13, 
-17, 29, -1, -19, -12, 12, -3, 1, 19, -2, 0, -14, -40, 15, -48, -1, 
13, 0, 12, 13, 3, 10, 2, -73, -30, 8, -41, -8, 5, 3, 13, 26, 
-41, 38, 48, -10, 3, 11, 61, 49, 0, 34, 28, 19, -19, -19, -29, -14, 
0, 0, 3, 9, 8, 6, -1, -11, 0, -12, -7, 18, 31, 74, 15, 11, 
21, -12, -7, -55, -3, -19, -34, -17, -20, -23, -31, -17, 15, 0, 24, 58, 
0, -7, 22, 18, 26, 30, 5, 23, 81, 1, 6, 12, -26, -48, -64, 22, 
10, -4, 28, -16, -30, -34, 21, 11, -33, -21, 1, 6, 10, 9, 5, -43, 
10, 21, 14, 7, -10, -19, -53, -31, -10, -21, 9, 24, 8, 33, -2, -21, 
-46, -68, -48, -3, 7, 7, 27, 0, -25, -23, -15, -31, -23, 3, -27, 10, 
30, 21, -16, -18, 47, 10, 21, 7, 0, -27, -14, -37, -6, 11, 4, 2, 
24, -12, -3, -10, -9, -25, -2, 0, 6, 23, 0, 0, 13, -14, -24, -41, 
};




#define layer_5_bias_size ((unsigned int)8) //array size
#define layer_5_bias_range ((nn_t)33) //multiply neuron result with range/1024

const nn_weight_t layer_5_bias[]={
-127, -9, -13, -20, -53, -39, -75, -53, };


#endif
