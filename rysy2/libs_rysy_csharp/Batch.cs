//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Batch : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Batch(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Batch obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Batch() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          rysyPINVOKE.delete_Batch(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public Batch(Shape input_shape, Shape output_shape, uint batch_size) : this(rysyPINVOKE.new_Batch__SWIG_0(Shape.getCPtr(input_shape), Shape.getCPtr(output_shape), batch_size), true) {
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public Batch(Shape input_shape, Shape output_shape) : this(rysyPINVOKE.new_Batch__SWIG_1(Shape.getCPtr(input_shape), Shape.getCPtr(output_shape)), true) {
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public Batch(Batch other) : this(rysyPINVOKE.new_Batch__SWIG_2(Batch.getCPtr(other)), true) {
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void create(DatasetInterface dataset) {
    rysyPINVOKE.Batch_create(swigCPtr, DatasetInterface.getCPtr(dataset));
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_std__vectorT_Tensor_t get_input_all() {
    SWIGTYPE_p_std__vectorT_Tensor_t ret = new SWIGTYPE_p_std__vectorT_Tensor_t(rysyPINVOKE.Batch_get_input_all(swigCPtr), false);
    return ret;
  }

  public SWIGTYPE_p_std__vectorT_Tensor_t get_output_all() {
    SWIGTYPE_p_std__vectorT_Tensor_t ret = new SWIGTYPE_p_std__vectorT_Tensor_t(rysyPINVOKE.Batch_get_output_all(swigCPtr), false);
    return ret;
  }

}
