//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Timer : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Timer(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Timer obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Timer() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          rysyPINVOKE.delete_Timer(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public Timer() : this(rysyPINVOKE.new_Timer(), true) {
  }

  public double get_time() {
    double ret = rysyPINVOKE.Timer_get_time(swigCPtr);
    return ret;
  }

  public double get_duration() {
    double ret = rysyPINVOKE.Timer_get_duration(swigCPtr);
    return ret;
  }

  public void start() {
    rysyPINVOKE.Timer_start(swigCPtr);
  }

  public void stop() {
    rysyPINVOKE.Timer_stop(swigCPtr);
  }

  public void sleep_ms(uint ms_time) {
    rysyPINVOKE.Timer_sleep_ms(swigCPtr, ms_time);
  }

  public void delay_ms(uint ms_time) {
    rysyPINVOKE.Timer_delay_ms(swigCPtr, ms_time);
  }

}
