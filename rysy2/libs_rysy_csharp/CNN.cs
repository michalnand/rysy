//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class CNN : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CNN(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CNN obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~CNN() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          rysyPINVOKE.delete_CNN(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public CNN() : this(rysyPINVOKE.new_CNN__SWIG_0(), true) {
  }

  public CNN(CNN other) : this(rysyPINVOKE.new_CNN__SWIG_1(CNN.getCPtr(other)), true) {
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public CNN(string network_config_file_name, Shape input_shape, Shape output_shape) : this(rysyPINVOKE.new_CNN__SWIG_3(network_config_file_name, Shape.getCPtr(input_shape), Shape.getCPtr(output_shape)), true) {
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public CNN(string network_config_file_name, Shape input_shape) : this(rysyPINVOKE.new_CNN__SWIG_4(network_config_file_name, Shape.getCPtr(input_shape)), true) {
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public CNN(string network_config_file_name) : this(rysyPINVOKE.new_CNN__SWIG_5(network_config_file_name), true) {
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public CNN(SWIGTYPE_p_Json__Value json_config, Shape input_shape, Shape output_shape) : this(rysyPINVOKE.new_CNN__SWIG_6(SWIGTYPE_p_Json__Value.getCPtr(json_config), Shape.getCPtr(input_shape), Shape.getCPtr(output_shape)), true) {
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public CNN(SWIGTYPE_p_Json__Value json_config, Shape input_shape) : this(rysyPINVOKE.new_CNN__SWIG_7(SWIGTYPE_p_Json__Value.getCPtr(json_config), Shape.getCPtr(input_shape)), true) {
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public CNN(SWIGTYPE_p_Json__Value json_config) : this(rysyPINVOKE.new_CNN__SWIG_8(SWIGTYPE_p_Json__Value.getCPtr(json_config)), true) {
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public CNN(Shape input_shape, Shape output_shape, float learning_rate, float lambda1, float lambda2, float gradient_clip, float dropout, uint minibatch_size) : this(rysyPINVOKE.new_CNN__SWIG_9(Shape.getCPtr(input_shape), Shape.getCPtr(output_shape), learning_rate, lambda1, lambda2, gradient_clip, dropout, minibatch_size), true) {
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public CNN(Shape input_shape, Shape output_shape, float learning_rate, float lambda1, float lambda2, float gradient_clip, float dropout) : this(rysyPINVOKE.new_CNN__SWIG_10(Shape.getCPtr(input_shape), Shape.getCPtr(output_shape), learning_rate, lambda1, lambda2, gradient_clip, dropout), true) {
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public CNN(Shape input_shape, Shape output_shape, float learning_rate, float lambda1, float lambda2, float gradient_clip) : this(rysyPINVOKE.new_CNN__SWIG_11(Shape.getCPtr(input_shape), Shape.getCPtr(output_shape), learning_rate, lambda1, lambda2, gradient_clip), true) {
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public CNN(Shape input_shape, Shape output_shape, float learning_rate, float lambda1, float lambda2) : this(rysyPINVOKE.new_CNN__SWIG_12(Shape.getCPtr(input_shape), Shape.getCPtr(output_shape), learning_rate, lambda1, lambda2), true) {
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public CNN(Shape input_shape, Shape output_shape, float learning_rate, float lambda1) : this(rysyPINVOKE.new_CNN__SWIG_13(Shape.getCPtr(input_shape), Shape.getCPtr(output_shape), learning_rate, lambda1), true) {
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public CNN(Shape input_shape, Shape output_shape, float learning_rate) : this(rysyPINVOKE.new_CNN__SWIG_14(Shape.getCPtr(input_shape), Shape.getCPtr(output_shape), learning_rate), true) {
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public CNN(Shape input_shape, Shape output_shape) : this(rysyPINVOKE.new_CNN__SWIG_15(Shape.getCPtr(input_shape), Shape.getCPtr(output_shape)), true) {
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public Shape get_input_shape() {
    Shape ret = new Shape(rysyPINVOKE.CNN_get_input_shape(swigCPtr), true);
    return ret;
  }

  public Shape get_output_shape() {
    Shape ret = new Shape(rysyPINVOKE.CNN_get_output_shape(swigCPtr), true);
    return ret;
  }

  public void forward(Tensor output, Tensor input) {
    rysyPINVOKE.CNN_forward__SWIG_0(swigCPtr, Tensor.getCPtr(output), Tensor.getCPtr(input));
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void forward(SWIGTYPE_p_std__vectorT_float_t output, SWIGTYPE_p_std__vectorT_float_t input) {
    rysyPINVOKE.CNN_forward__SWIG_1(swigCPtr, SWIGTYPE_p_std__vectorT_float_t.getCPtr(output), SWIGTYPE_p_std__vectorT_float_t.getCPtr(input));
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void forward(SWIGTYPE_p_std__vectorT_std__vectorT_float_t_t output, SWIGTYPE_p_std__vectorT_std__vectorT_float_t_t input) {
    rysyPINVOKE.CNN_forward__SWIG_2(swigCPtr, SWIGTYPE_p_std__vectorT_std__vectorT_float_t_t.getCPtr(output), SWIGTYPE_p_std__vectorT_std__vectorT_float_t_t.getCPtr(input));
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void train(Tensor required_output, Tensor input) {
    rysyPINVOKE.CNN_train__SWIG_0(swigCPtr, Tensor.getCPtr(required_output), Tensor.getCPtr(input));
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void train(SWIGTYPE_p_std__vectorT_float_t required_output, SWIGTYPE_p_std__vectorT_float_t input) {
    rysyPINVOKE.CNN_train__SWIG_1(swigCPtr, SWIGTYPE_p_std__vectorT_float_t.getCPtr(required_output), SWIGTYPE_p_std__vectorT_float_t.getCPtr(input));
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void train(SWIGTYPE_p_std__vectorT_Tensor_t required_output, SWIGTYPE_p_std__vectorT_Tensor_t input, uint epoch_count, bool verbose) {
    rysyPINVOKE.CNN_train__SWIG_2(swigCPtr, SWIGTYPE_p_std__vectorT_Tensor_t.getCPtr(required_output), SWIGTYPE_p_std__vectorT_Tensor_t.getCPtr(input), epoch_count, verbose);
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void train(SWIGTYPE_p_std__vectorT_Tensor_t required_output, SWIGTYPE_p_std__vectorT_Tensor_t input, uint epoch_count) {
    rysyPINVOKE.CNN_train__SWIG_3(swigCPtr, SWIGTYPE_p_std__vectorT_Tensor_t.getCPtr(required_output), SWIGTYPE_p_std__vectorT_Tensor_t.getCPtr(input), epoch_count);
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void train(SWIGTYPE_p_std__vectorT_Tensor_t required_output, SWIGTYPE_p_std__vectorT_Tensor_t input) {
    rysyPINVOKE.CNN_train__SWIG_4(swigCPtr, SWIGTYPE_p_std__vectorT_Tensor_t.getCPtr(required_output), SWIGTYPE_p_std__vectorT_Tensor_t.getCPtr(input));
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void train(SWIGTYPE_p_std__vectorT_std__vectorT_float_t_t required_output, SWIGTYPE_p_std__vectorT_std__vectorT_float_t_t input, uint epoch_count, bool verbose) {
    rysyPINVOKE.CNN_train__SWIG_5(swigCPtr, SWIGTYPE_p_std__vectorT_std__vectorT_float_t_t.getCPtr(required_output), SWIGTYPE_p_std__vectorT_std__vectorT_float_t_t.getCPtr(input), epoch_count, verbose);
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void train(SWIGTYPE_p_std__vectorT_std__vectorT_float_t_t required_output, SWIGTYPE_p_std__vectorT_std__vectorT_float_t_t input, uint epoch_count) {
    rysyPINVOKE.CNN_train__SWIG_6(swigCPtr, SWIGTYPE_p_std__vectorT_std__vectorT_float_t_t.getCPtr(required_output), SWIGTYPE_p_std__vectorT_std__vectorT_float_t_t.getCPtr(input), epoch_count);
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void train(SWIGTYPE_p_std__vectorT_std__vectorT_float_t_t required_output, SWIGTYPE_p_std__vectorT_std__vectorT_float_t_t input) {
    rysyPINVOKE.CNN_train__SWIG_7(swigCPtr, SWIGTYPE_p_std__vectorT_std__vectorT_float_t_t.getCPtr(required_output), SWIGTYPE_p_std__vectorT_std__vectorT_float_t_t.getCPtr(input));
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void train_from_error(Tensor error) {
    rysyPINVOKE.CNN_train_from_error(swigCPtr, Tensor.getCPtr(error));
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public Tensor get_error_back() {
    Tensor ret = new Tensor(rysyPINVOKE.CNN_get_error_back(swigCPtr), false);
    return ret;
  }

  public void set_training_mode() {
    rysyPINVOKE.CNN_set_training_mode(swigCPtr);
  }

  public void unset_training_mode() {
    rysyPINVOKE.CNN_unset_training_mode(swigCPtr);
  }

  public bool is_training_mode() {
    bool ret = rysyPINVOKE.CNN_is_training_mode(swigCPtr);
    return ret;
  }

  public void reset() {
    rysyPINVOKE.CNN_reset(swigCPtr);
  }

  public Shape add_layer(string layer_type, Shape shape, string weights_file_name_prefix) {
    Shape ret = new Shape(rysyPINVOKE.CNN_add_layer__SWIG_0(swigCPtr, layer_type, Shape.getCPtr(shape), weights_file_name_prefix), true);
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Shape add_layer(string layer_type, Shape shape) {
    Shape ret = new Shape(rysyPINVOKE.CNN_add_layer__SWIG_1(swigCPtr, layer_type, Shape.getCPtr(shape)), true);
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Shape add_layer(string layer_type) {
    Shape ret = new Shape(rysyPINVOKE.CNN_add_layer__SWIG_2(swigCPtr, layer_type), true);
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string asString() {
    string ret = rysyPINVOKE.CNN_asString(swigCPtr);
    return ret;
  }

  public void print() {
    rysyPINVOKE.CNN_print(swigCPtr);
  }

  public void save(string path) {
    rysyPINVOKE.CNN_save(swigCPtr, path);
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public void load_weights(string file_name_prefix) {
    rysyPINVOKE.CNN_load_weights(swigCPtr, file_name_prefix);
    if (rysyPINVOKE.SWIGPendingException.Pending) throw rysyPINVOKE.SWIGPendingException.Retrieve();
  }

  public uint get_layer_output_size() {
    uint ret = rysyPINVOKE.CNN_get_layer_output_size(swigCPtr);
    return ret;
  }

  public Tensor get_layer_output(uint layer_idx) {
    Tensor ret = new Tensor(rysyPINVOKE.CNN_get_layer_output(swigCPtr, layer_idx), false);
    return ret;
  }

  public bool get_layer_weights_flag(uint layer_idx) {
    bool ret = rysyPINVOKE.CNN_get_layer_weights_flag(swigCPtr, layer_idx);
    return ret;
  }

}
