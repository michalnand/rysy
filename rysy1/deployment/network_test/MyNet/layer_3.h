#ifndef _LAYER_layer_3_H_
#define _LAYER_layer_3_H_


#include <NetworkConfig.h>


#define layer_3_type "dense convolution"

sLayerGeometry layer_3_input_geometry = {14, 14, 8};
sLayerGeometry layer_3_output_geometry = {14, 14, 16};
sLayerGeometry layer_3_kernel_geometry = {3, 3, 8};

#define layer_3_weights_size ((unsigned int)576) //array size
#define layer_3_weights_range ((nn_t)586) //multiply neuron result with range/1024

const nn_weight_t layer_3_weights[]={
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
10, 0, 12, 10, -2, 26, -11, -41, 43, 2, -33, 43, 0, 3, -9, -28, 
-31, -21, -51, -10, -45, -41, 18, 5, 21, 15, -31, -10, 7, -25, 15, 28, 
32, 46, 19, 16, 40, -24, -127, -98, -65, -19, -31, 18, -27, 3, 55, 19, 
11, 65, 23, 19, 14, -14, 0, -3, -18, -1, 22, -10, 2, 34, -44, -61, 
0, -77, -62, 21, 12, 9, 28, -2, -4, 0, -5, -3, 27, 0, -13, 15, 
-29, -12, 15, 8, 32, 42, 11, -7, -14, -9, 11, -29, 67, 41, -53, 1, 
26, 42, -4, -34, -5, -3, -11, -49, -24, 15, 38, 35, 49, 55, -16, -3, 
-44, -13, -6, 31, -74, -14, -23, -22, 33, -40, 15, 6, 44, 18, -3, -29, 
-22, -27, -37, 30, 1, 0, 22, -3, -35, -14, -36, -18, 32, 22, 49, 19, 
22, 1, 4, -29, -33, 25, 19, 20, -2, -22, -5, -27, -14, -4, -13, 9, 
-14, -39, -31, -14, 25, 62, 45, -22, -11, -3, 19, -16, -73, 3, 10, 14, 
2, -5, -32, 4, -18, -49, -46, 10, 98, 39, 30, 39, 3, 32, 44, -25, 
25, 29, -14, -34, 0, -5, -30, 10, -33, -10, 31, 12, -17, -19, 5, -24, 
17, 8, 0, 29, -19, -5, -19, 6, -15, 5, 6, -26, 12, 0, -13, 19, 
7, 0, 30, -4, 4, 19, 4, -31, 4, 2, -14, -20, 13, -24, -45, 34, 
-41, -23, 31, -38, -20, 17, -3, 25, -30, 17, 51, -24, -34, 10, 26, 14, 
24, -12, -89, -22, -50, -33, -1, -3, 10, 42, -27, -27, -32, 12, 19, 18, 
41, 46, 76, -20, -32, -13, 12, 8, 3, 36, 26, 25, -10, 0, -38, -10, 
-37, -27, 12, -6, 20, -1, -16, -56, -9, -14, 4, 0, 4, 30, 36, -6, 
-55, 9, 0, 35, -2, 0, 50, 21, -7, -17, 1, 21, 36, 44, 40, 43, 
};




#define layer_3_bias_size ((unsigned int)8) //array size
#define layer_3_bias_range ((nn_t)45) //multiply neuron result with range/1024

const nn_weight_t layer_3_bias[]={
110, 102, -4, 100, -2, 108, 127, -52, };


#endif
